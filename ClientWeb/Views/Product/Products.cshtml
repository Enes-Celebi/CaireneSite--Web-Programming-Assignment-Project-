@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ClientWeb.Models.Product>
@{ ViewBag.Title = "Products"; }
<link href="~/Content/PagedList.css" rel="stylesheet" />

<style>
    .pagination > .active > a {
        color: #fff;
        background-color: #3fc35f;
        border: 1px solid #3fc35f;
    }

    .M-sidebar-price-range #minValue #maxValue {
        border: 1px solid #e8e7e6;
        display: inline-block;
        font-size: 14px;
        height: 30px;
        margin-right: 10px;
        margin-top: 20px;
        padding: 4px 10px;
    }
</style>
@if (!string.IsNullOrEmpty(Request.QueryString["categoryName"]))
{
    <section id="M-catg-head-banner">
        <img src="#" alt="fashion img">
        <div class="M-catg-head-banner-area">
            <div class="container">
                <div class="M-catg-head-banner-content">
                    <h2>@(Request.QueryString["categoryName"])</h2>
                    <ol class="breadcrumb">
                        <li><a href="@Url.Action("Index","Home")">Home</a></li>
                        <li class="active">@(Request.QueryString["categoryName"])</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
}
<section id="M-product-category">
    <div class="container">
        <div class="row">
            <div class="col-lg-9 col-md-9 col-sm-8 col-md-push-3">
                <div class="M-product-catg-content">
                    <div class="M-product-catg-head">
                        <div class="M-product-catg-head-left">
                            @using (Html.BeginForm("GetAllProducts", "Product", FormMethod.Post, new { @id = "ssForm", categoryName = Request.QueryString["categoryName"] }))
                            {

                                <label for="">Sort by</label>
                                <select name="sortBy">
                                    <option value="Default" selected> Default</option>
                                    <option value="Name"> Name</option>
                                    <option value="Price">Price</option>
                                    <option value="Date">Date</option>
                                </select>

                                <label for="">Show</label>
                                <select name="showNoProducts" onchange="">
                                    <option value="6" selected>6</option>
                                    <option value="9">9</option>
                                    <option value="12">12</option>
                                </select>
                            }
                        </div>
                        <div class="M-product-catg-head-right">
                            <a id="grid-catg" href="#"><span class="fa fa-th"></span></a>
                        </div>
                    </div>
                    <div class="M-product-catg-body">
                        <ul class="M-product-catg">
                            @if (Model != null || Model.Count > 0)
                            {
                                foreach (var item in Model)
                                {
                                    { Html.RenderPartial("_Product", item); }
                                }
                            }
                            else
                            {
                                <h3>Sorry! There is no Product available</h3>
                            }
                        </ul>

                    </div>
                    <div class="M-product-catg-pagination">
                        @if (ViewBag.filterByPrice == true)
                        {
                            @Html.PagedListPager(Model, page => Url.Action("FilterByPrice", new { minPrice = Request.QueryString["minPrice"], maxPrice = Request.QueryString["maxPrice"], page })
                            , new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                        }
                        else
                        {
                            @Html.PagedListPager(Model, page => Url.Action("GetProductsByCategory", new { categoryName = Request.QueryString["categoryName"], page })
                             , new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-4 col-md-pull-9">
                <aside class="M-sidebar">
                    <div class="M-sidebar-widget">
                        <h3>Category</h3>
                        <ul class="M-catg-nav">
                            @foreach (var item in ViewBag.Categories)
                            {
                                <li><a href="@Url.Action("GetProductsByCategory", new { categoryName = item })">@item</a></li>
                            }
                        </ul>
                    </div>
                    <div class="M-sidebar-widget">
                    </div>
                    <div class="M-sidebar-widget">
                        <h3>Shop By Price</h3>
                        <div class="M-sidebar-price-range">

                            @using (Html.BeginForm("FilterByPrice", "Product", FormMethod.Get))
                            {
                                <input type="range" min="0" max="100" onchange="updateMinInput(this.value);"> <br />
                                <input type="range" min="0" max="100" onchange="updateMaxInput(this.value);">
                                <br />
                                <input type="number" name="minPrice" id="minValue" min="0" maxlength="6" max="999999" value="00" size="6">
                                <input type="number" name="maxPrice" id="maxValue" min="0" maxlength="6" max="999999" value="00" size="6"> <br /><br />
                                <button class="M-filter-btn" type="submit">Filter</button>
                            }
                        </div>

                    </div>
                    <div class="M-sidebar-widget">
                        <h3>Top Sold Products</h3>
                        <div class="M-recently-views">
                            <ul>
                                @foreach (ClientWeb.Models.TopSoldProduct item in ViewBag.TopRatedProducts)
                                {
                                    <li>
                                        <a href="@Url.Action("ViewDetails", "Product", new { id = item.product.ProductID })" class="M-cartbox-img"><img alt="@item.product.AltText" src="@item.product.ImageURL"></a>
                                        <div class="M-cartbox-info">
                                            <h4> <b><a href="@Url.Action("ViewDetails", "Product", new { id = item.product.ProductID })">@item.product.Name</a></b></h4>
                                            <p>Sold: @item.CountSold</p>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="M-sidebar-widget">
                        <h3>Recently Views</h3>
                        <div class="M-recently-views">
                            <ul>
                                @foreach (ClientWeb.Models.Product item in ViewBag.RecentViewsProducts)
                                {
                                    <li>
                                        <a href="@Url.Action("ViewDetails", "Product", new { id = item.ProductID })" class="M-cartbox-img"><img alt="@item.AltText" src="@item.ImageURL"></a>
                                        <div class="M-cartbox-info">
                                            <h4><b><a href="@Url.Action("ViewDetails", "Product", new { id = item.ProductID })">@item.Name</a></b></h4>
                                            <p>TRY. @item.UnitPrice</p>
                                        </div>
                                    </li>

                                }
                            </ul>
                        </div>
                    </div>

                </aside>
            </div>

        </div>
    </div>
</section>

<script type="text/javascript">
    function updateMinInput(val) {
        document.getElementById('minValue').value = 00;
        document.getElementById('minValue').value = val * 10;
    }
    function updateMaxInput(val) {
        document.getElementById('maxValue').value = 00;
        document.getElementById('maxValue').value = val * 100;
    }
</script>